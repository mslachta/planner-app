{"ast":null,"code":"var _jsxFileName = \"/Users/martin/www/_CODECADEMY/local repo/planner-app/src/components/appointmentForm/AppointmentForm.js\";\nimport React from \"react\";\nimport { ContactPicker } from '../contactPicker/ContactPicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppointmentForm = _ref => {\n  let {\n    contacts,\n    title,\n    setTitle,\n    contact,\n    setContact,\n    date,\n    setDate,\n    hour,\n    setHour,\n    handleSubmit\n  } = _ref;\n\n  const getTodayString = () => {\n    const [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n  };\n\n  const getContactNames = () => {\n    return contacts.map(contact => contact.name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"enter a Title for the appointment:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      onChange: _ref2 => {\n        let {\n          target\n        } = _ref2;\n        return setTitle(target.value);\n      },\n      placeholder: \"title\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"date\",\n      children: \"select a Date for the appointment:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: date,\n      type: \"date\",\n      name: \"date\",\n      id: \"date\",\n      onChange: _ref3 => {\n        let {\n          target\n        } = _ref3;\n        return setDate(target.value);\n      },\n      htmlmin: getTodayString(),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"hour\",\n      children: \"select an Hour for the appointment:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: hour,\n      type: \"time\",\n      name: \"hour\",\n      id: \"hour\",\n      onChange: _ref4 => {\n        let {\n          target\n        } = _ref4;\n        return setHour(target.value);\n      },\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"contact\",\n      children: \"Choose a contact:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactPicker, {\n      name: \"contact\",\n      onChange: _ref5 => {\n        let {\n          target\n        } = _ref5;\n        return setContact(target.value);\n      },\n      contacts: getContactNames(),\n      value: contact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Add Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = AppointmentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"sources":["/Users/martin/www/_CODECADEMY/local repo/planner-app/src/components/appointmentForm/AppointmentForm.js"],"names":["React","ContactPicker","AppointmentForm","contacts","title","setTitle","contact","setContact","date","setDate","hour","setHour","handleSubmit","getTodayString","month","day","year","Date","toLocaleDateString","split","padStart","getContactNames","map","name","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {ContactPicker} from '../contactPicker/ContactPicker';\n\nexport const AppointmentForm = ({\n  contacts,\n  title,\n  setTitle,\n  contact,\n  setContact,\n  date,\n  setDate,\n  hour,\n  setHour,\n  handleSubmit\n}) => {\n  const getTodayString = () => {\n    const [month, day, year] = new Date()\n      .toLocaleDateString(\"en-US\")\n      .split(\"/\");\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n  };\n\n  const getContactNames = () => { \n    return contacts.map((contact) => contact.name);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor='title'>enter a Title for the appointment:</label>\n      <input \n        value={title}\n        type='text'\n        name=\"title\"\n        id=\"title\"\n        onChange={({target}) => setTitle(target.value)}\n        placeholder='title'\n        required\n      />\n      <label htmlFor='date'>select a Date for the appointment:</label>\n      <input \n        value={date}\n        type='date'\n        name=\"date\"\n        id=\"date\"\n        onChange={({target}) => setDate(target.value)}\n        htmlmin={getTodayString()}\n        required\n      />\n      <label htmlFor='hour'>select an Hour for the appointment:</label>\n      <input \n        value={hour}\n        type='time'\n        name=\"hour\"\n        id=\"hour\"\n        onChange={({target}) => setHour(target.value)}\n        required\n      />\n      <label htmlFor=\"contact\">Choose a contact:</label>\n      <ContactPicker \n        name='contact'\n        onChange={({target}) => setContact(target.value)}\n        contacts={getContactNames()}\n        value={contact}\n      />\n      <input type='submit' value='Add Appointment' />\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}