{"ast":null,"code":"var _jsxFileName = \"/Users/martin/www/_CODECADEMY/local repo/planner-app/src/containers/contactsPage/ContactsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ContactForm } from '../../components/contactForm/ContactForm';\nimport { TileList } from '../../components/tileList/TileList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsPage = _ref => {\n  _s();\n\n  let {\n    contacts,\n    addContact\n  } = _ref;\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [duplicate, setDuplicate] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (duplicate !== undefined) {\n      addContact(name, phone, email);\n      setName('');\n      setPhone('');\n      setEmail('');\n    }\n  };\n\n  useEffect(() => {\n    const nameDuplicate = () => {\n      const isDuplicate = contacts.find(contact => contact.name === name);\n\n      if (!isDuplicate) {\n        return true;\n      }\n\n      return false;\n    };\n\n    if (nameDuplicate()) {\n      setDuplicate(true);\n    } else {\n      setDuplicate(false);\n    }\n  }, [name, contacts, duplicate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Add Contact\", !duplicate ? \" - Name already exists, please change it\" : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        name: name,\n        setName: setName,\n        phone: phone,\n        setPhone: setPhone,\n        email: email,\n        setEmail: setEmail,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileList, {\n        tiles: contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactsPage, \"BYxyrn6t6cgckC7hvAUC646tH1A=\");\n\n_c = ContactsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"sources":["/Users/martin/www/_CODECADEMY/local repo/planner-app/src/containers/contactsPage/ContactsPage.js"],"names":["React","useEffect","useState","ContactForm","TileList","ContactsPage","contacts","addContact","name","setName","phone","setPhone","email","setEmail","duplicate","setDuplicate","handleSubmit","e","preventDefault","undefined","nameDuplicate","isDuplicate","find","contact"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,WAAT,QAA4B,0CAA5B;AACA,SAASC,QAAT,QAAyB,oCAAzB;;AAEA,OAAO,MAAMC,YAAY,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAA2B;AACtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMc,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIJ,SAAS,KAAKK,SAAlB,EAA6B;AAC3BZ,MAAAA,UAAU,CAACC,IAAD,EAAOE,KAAP,EAAcE,KAAd,CAAV;AACAH,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GATD;;AAWAZ,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMmB,aAAa,GAAG,MAAM;AAC1B,YAAMC,WAAW,GAAGf,QAAQ,CAACgB,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACf,IAAR,KAAiBA,IAA1C,CAApB;;AACA,UAAI,CAACa,WAAL,EAAkB;AAChB,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD,KAND;;AAQA,QAAID,aAAa,EAAjB,EAAqB;AACnBL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAdQ,EAcN,CAACP,IAAD,EAAOF,QAAP,EAAiBQ,SAAjB,CAdM,CAAT;AAgBA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA,kCAEG,CAACA,SAAD,GAAa,0CAAb,GAA0D,EAF7D;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,WAAD;AACE,QAAA,IAAI,EAAEN,IADR;AACc,QAAA,OAAO,EAAEC,OADvB;AAEE,QAAA,KAAK,EAAEC,KAFT;AAEgB,QAAA,QAAQ,EAAEC,QAF1B;AAGE,QAAA,KAAK,EAAEC,KAHT;AAGgB,QAAA,QAAQ,EAAEC,QAH1B;AAIE,QAAA,YAAY,EAAEG;AAJhB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEV;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtDM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { ContactForm } from '../../components/contactForm/ContactForm';\nimport { TileList } from '../../components/tileList/TileList';\n\nexport const ContactsPage = ({contacts, addContact}) => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [duplicate, setDuplicate] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (duplicate !== undefined) {\n      addContact(name, phone, email);\n      setName('');\n      setPhone('');\n      setEmail('');\n    }\n  };\n\n  useEffect( () => {\n    const nameDuplicate = () => {   \n      const isDuplicate = contacts.find(contact => contact.name === name);\n      if (!isDuplicate) {\n        return true;\n      }\n      return false;\n    };\n\n    if (nameDuplicate()) {\n      setDuplicate(true);\n    } else {\n      setDuplicate(false);\n    }\n  }, [name, contacts, duplicate]);\n\n  return (\n    <div>\n      <section>\n        <h2>\n          Add Contact\n          {!duplicate ? \" - Name already exists, please change it\" : \"\"}\n        </h2> \n        <ContactForm \n          name={name} setName={setName}\n          phone={phone} setPhone={setPhone}\n          email={email} setEmail={setEmail}\n          handleSubmit={handleSubmit}\n        />\n      </section>\n      <hr />\n      <section>\n        <h2>Contacts</h2>\n        <TileList tiles={contacts}/>\n      </section>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}